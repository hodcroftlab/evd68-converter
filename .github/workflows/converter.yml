# .github/workflows/converter.yml
# GitHub Actions workflow to convert annotations and deploy to GitHub Pages

name: Convert Annotation

on:
  # Run this workflow on a schedule (twice daily)
  schedule:
    - cron: '30 5,17 * * *'  # At 05:30 and 17:30 UTC every day

  # Also run on push or PR to master branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allow manual triggering
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Python 3.9 environment
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Step 3: Install all Python dependencies from requirements.txt
      - name: Install Python dependencies
        run: pip install -r requirements.txt

      # Step 4: Generate lookup.js from the GenBank reference using your script
      - name: Generate lookup table
        run: |
          # Run conversion script and export lookup.js
          python convert_annotation.py reference.gbk --export
          # Create output folder for deployment
          mkdir -p public
          # Copy to deployment folder
          cp lookup.js index.html static/js/script.js static/css/style.css public/

      # Step 5: Upload generated content to GitHub Pages artifact storage
      - name: Upload artifact to GitHub Pages
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public  # Folder containing your static website

      # Step 6: Deploy to GitHub Pages from the uploaded artifact
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v1