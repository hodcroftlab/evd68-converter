# .github/workflows/converter.yml
# This is a GitHub Actions workflow file that defines a CI/CD pipeline for converting annotations.

name: Convert Annotation

on:
  # Trigger this workflow on a schedule (daily, or adjust as needed)
  schedule:
    - cron:  '30 5,17 * * *'  # This will run at 5:30 AM and 5:30 PM UTC every day
  #   - cron: '0 0 * * *'  # This will run at midnight every day
  
  # Optionally, trigger on specific push events (e.g., updates to data files)
  push:
    # paths:
    #   - 'data/*'  # Specify paths to data files if applicable
    #   - 'scripts/*'
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   deploy:  # generate_plots:
#     environment:
#       name: github-pages
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest  # Use the latest Ubuntu runner

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - name: Checkout code
#         uses: actions/checkout@v4  # Check out the repository's code

#       - name: Setup Pages
#         uses: actions/configure-pages@v5
        
#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.9'  # Specify the Python version to use

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt  # Install the dependencies from requirements.txt

#       # - name: Fetch data and generate plots
#       #   run: |
#       #     # Run the Python script to fetch data and generate the plots
#       #     python pathogen_counts_plotly.py  
#       #     python pathogen_source_type_plotly.py
#       #     python pathogen_country_plotly.py

#       # Runs a single command using the runners shell
#       - name: Run a one-line script
#         run: echo Hello, world!

#       # - name: Commit and push updated plots
#       #   run: |
#       #     git config --global user.name 'GitHub Actions'
#       #     git config --global user.email 'actions@github.com'
          
#       #     # Stage the changes (generated plot files)
#       #     git add images/* index.html

#       #     # Commit and push the changes back to the repository
#       #     git commit -m "Update pathogen plots"
#       #     git push origin master  # Adjust if you're using a different branch

#       # Runs a set of commands using the runners shell
#       - name: Run a multi-line script
#         run: |
#           echo Add other actions to build,
#           echo test, and deploy your project.

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Upload artifact to GitHub Pages
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public # Replace with the directory containing your webpage files

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v1